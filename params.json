{
  "name": "Dicom ECG converter and viewer ",
  "tagline": "Dicom ECG Converter and Viewer. Convert to PDF, PNG, JPG, SVG, ...",
  "body": "[logo]: https://raw.github.com/marcodebe/dicomecg_convert/master/images/logo.png\r\n![ECG Dicom Convert][logo]\r\n\r\n# Dicom ECG Conversion\r\nA python module and relative tool to convert Dicom ECG (waveform) files to PDF, PNG, SVG, etc.\r\nThe DICOM file can also be specified as `studyUID seriesUID objectUID` and \r\nretrieved by your WADO server.\r\n\r\n**THE PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT WITHOUT ANY WARRANTY OF ANY KIND.**\r\n\r\nTry it online first!\r\n--------------------\r\nYou can use the **[demo site](https://ecg.galliera.it)** to quickly test the results\r\nbefore installing the software.\r\nYou can convert your own DICOM files, or use preloaded sample files from different modality models.\r\n\r\nUsage of `convert.py` tool\r\n-----------------------\r\n```bash\r\npython convert.py <inputfile> [--layout=LAYOUT] [--output=FILE|--format=FMT] --minor-grid\r\npython convert.py <stu> <ser> <obj> [--layout=LAYOUT] [--output=FILE|--format=FMT] --minor-grid\r\npython convert.py --help\r\n```\r\nFor example the file [anonymous\\_ecg\\_3x4\\_1.png](https://github.com/marcodebe/dicomecg_convert/blob/master/sample_files/anonymous_ecg_3x4_1.png)\r\nis generated by:\r\n```\r\npython convert.py sample_files/anonymous_ecg.dcm -o sample_files/anonymous_ecg_4x3_1.pdf\r\n```\r\n\r\nThe input can be a file or the triplet `studyUID, seriesUID, objectUID`. In the latter\r\ncase dicom file is downloaded via [WADO](http://medical.nema.org/Dicom/2011/11_18pu.pdf).\r\n\r\nThe ouput format is deduced from the extension of the `FILE`, if `--output` is given.\r\nIf the output file is not given `--format` must be defined.\r\nSupported output formats are: eps, jpeg, jpg, pdf, pgf, png, ps, raw, rgba, svg, svgz, tif, tiff.\r\n\r\nBy default the 5mm grid is drawn, `--minor-grid` add the minor grid (1mm).\r\n\r\nThe signals are filtered using a lowpass (40 Hz)\r\n[butterworth filter](http://en.wikipedia.org/wiki/Butterworth_filter) \r\nof order 2.\r\n\r\n`LAYOUT` can be one of: 3x4\\_1 (that is 3 rows for 4 columns plus 1 row), 3x4, 6x2, 12x1 (default: 3x4_1).\r\nNew layouts can be defined adding the corresponding matrix in LAYOUT dictionary in `config.py`.\r\n\r\n## Install\r\nYou first have to install some system library and a fortran compiler.\r\nOn a Debian machine:\r\n```bash\r\nsudo apt-get install libpng12-dev\r\nsudo apt-get install libblas-dev\r\nsudo apt-get install liblapack-dev \r\nsudo apt-get install gfortran\r\n```\r\n\r\n### Global installation\r\n```bash\r\nsudo pip install -r requirements.txt\r\ngit clone git@github.com:marcodebe/dicomecg_convert.git\r\ncd dicomecg_convert\r\nsudo python setup.py install\r\n```\r\n\r\n### Inside a virtualenv\r\n```bash\r\ngit clone git@github.com:marcodebe/dicomecg_convert.git\r\ncd dicomecg_convert\r\nvirtualenv .\r\n. bin/activate\r\npip install -r requirements.txt\r\npython setup.py install\r\n```\r\n\r\n## Documentation\r\nTo generate documentation use epydoc packages:\r\n```bash\r\ncd path/to/dicomecg_convert\r\nepydoc --html -o docs ecg.py\r\n```\r\nRead epydoc manual for other output formats and options:\r\n```bash\r\nepydoc -h\r\n```\r\nTo install the epydoc package on:\r\n```bash\r\nsudo pip install epydoc\r\n```\r\nor download the installation package from [Epydoc](http://epydoc.sourceforge.net/) and follow the instructions.\r\n\r\n## References\r\n * http://medical.nema.org/Dicom/supps/sup30_lb.pdf\r\n * http://dicomlookup.com/html/03_03PU.html#LinkTarget_229354\r\n * http://libir.tmu.edu.tw/bitstream/987654321/21661/1/B09.pdf\r\n * [Mortara ECG Conformance Statement](http://www.mortara.com/fileadmin/user_upload/global/Products/Healthcare/DICOM/ELI%20Electrocardiographs%20DICOM%20Conformance%20Statement.pdf)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}